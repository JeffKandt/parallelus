#!/usr/bin/env bash
set -euo pipefail

repo_root=$(git rev-parse --show-toplevel 2>/dev/null || exit 0)
cd "$repo_root"

agent_rc="$repo_root/.agents/agentrc"
if [[ -f "$agent_rc" ]]; then
  # shellcheck disable=SC1090
  . "$agent_rc"
fi

base_branch="${DEFAULT_BASE:-main}"

current_branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "")

staged_files=$(git diff --cached --name-only)

if [[ -z "$staged_files" ]]; then
  exit 0
fi

if [[ -z "${AGENTS_ALLOW_MAIN_COMMIT:-}" && "$current_branch" == "$base_branch" ]]; then
  if ! git rev-parse -q --verify MERGE_HEAD >/dev/null; then
    cat >&2 <<'EOF'
pre-commit: Direct commits to the base branch are blocked by default.
If this is an emergency, rerun with AGENTS_ALLOW_MAIN_COMMIT=1 git commit ...
EOF
    exit 1
  fi
fi

needs_plan_log_reminder=0
for path in $staged_files; do
  case "$path" in
    docs/plans/*|docs/progress/*|sessions/*)
      ;; # docs already included
    *)
      needs_plan_log_reminder=1
      break
      ;;
  esac
done

if [[ $needs_plan_log_reminder -eq 1 && "$current_branch" == feature/* ]]; then
  if ! printf '%s\n' "$staged_files" | grep -q '^docs/progress/feature-'; then
    cat >&2 <<'EOF'
pre-commit: Reminder — stage docs/progress/feature-*.md with a timestamped entry.
EOF
  fi
  if ! printf '%s\n' "$staged_files" | grep -q '^docs/plans/feature-'; then
    cat >&2 <<'EOF'
pre-commit: Reminder — sync docs/plans/feature-*.md with current tasks/checklist.
EOF
  fi
fi

exit 0
