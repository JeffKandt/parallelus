#!/usr/bin/env bash
set -euo pipefail

usage() {
  cat <<'HELP'
Usage: agents-turn-end [message]

Appends a progress entry to the current branch's progress log, updates the
session summary/metadata, and nudges the branch plan's Next Actions section.
HELP
}

if [[ ${1:-} == "-h" || ${1:-} == "--help" ]]; then
  usage
  exit 0
fi

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# shellcheck source=../agentrc
. "${SCRIPT_DIR}/../agentrc"

repo_root=$(git rev-parse --show-toplevel 2>/dev/null || true)
if [[ -z "$repo_root" ]]; then
  echo "agents-turn-end: not inside a git repository" >&2
  exit 1
fi

cd "$repo_root"

current_branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "detached")
if [[ "$current_branch" == "HEAD" || -z "$current_branch" ]]; then
  echo "agents-turn-end: detached HEAD not supported" >&2
  exit 1
fi

slugged_branch="${current_branch//\//-}"
plan_file="$PLAN_DIR/$slugged_branch.md"
progress_file="$PROGRESS_DIR/$slugged_branch.md"

if [[ ! -f "$progress_file" ]]; then
  echo "agents-turn-end: progress file $progress_file is missing" >&2
  exit 1
fi

if [[ ! -f "$plan_file" ]]; then
  echo "agents-turn-end: plan file $plan_file is missing" >&2
  exit 1
fi

message="${*:-Updated progress}"

timestamp=$(date -u '+%Y-%m-%d %H:%M:%S UTC')

cat <<PROGRESS >> "$progress_file"

## ${timestamp}
**Summary**
- ${message}

**Artifacts**
- TODO: list touched files.

**Next Actions**
- [ ] TODO: follow-up
PROGRESS

if grep -q '^## Next Actions' "$plan_file"; then
  printf -- '\n- [ ] %s\n' "$message" >> "$plan_file"
else
  cat <<PLAN >> "$plan_file"

## Next Actions
- [ ] ${message}
PLAN
fi

if [[ -n "${SESSION_ID:-}" ]]; then
  session_path="${SESSION_DIR%/}/$SESSION_ID"
  if [[ -d "$session_path" ]]; then
    summary_file="$session_path/summary.md"
    if [[ ! -f "$summary_file" ]]; then
      printf "# Session %s\n\n## Notes\n\n" "$SESSION_ID" > "$summary_file"
    fi
    printf -- '- %s (%s)\n' "$message" "$timestamp" >> "$summary_file"

    meta_file="$session_path/meta.json"
    if [[ -f "$meta_file" ]]; then
      python3 - "$meta_file" "$timestamp" <<'PY'
import json
import sys
from pathlib import Path

meta_path = Path(sys.argv[1])
ts = sys.argv[2]
try:
    data = json.loads(meta_path.read_text())
except Exception:
    data = {}
data["updated_at"] = ts
meta_path.write_text(json.dumps(data, indent=2) + "\n")
PY
    fi
  fi
fi

echo "agents-turn-end: recorded checkpoint for $current_branch at $timestamp"

self_retrospective="$repo_root/.agents/bin/self-retrospective"
if [[ -x "$self_retrospective" ]]; then
  "$self_retrospective" || true
fi
